/*
 * Generated by
 *
 *      _____ _          __  __      _     _
 *     / ____| |        / _|/ _|    | |   | |
 *    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
 *     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
 *     ____) |   < (_| | | | || (_) | | (_| |  __/ |
 *    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
 *
 * The code generator that works in many programming languages
 *
 *			https://www.skaffolder.com
 *
 *
 * You can generate the code from the command-line
 *       https://npmjs.com/package/skaffolder-cli
 *
 *       npm install -g skaffodler-cli
 *
 *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
 *
 * To remove this comment please upgrade your plan here:
 *      https://app.skaffolder.com/#!/upgrade
 *
 * Or get up to 70% discount sharing your unique link:
 *       https://beta.skaffolder.com/#!/register?friend=5ce1adcf63897a72058db532
 *
 * You will get 10% discount for each one of your friends
 *
 */
import OrderControllerGenerated from "./generated/OrderControllerGenerated";
import Properties from "../../properties";
import OrderModel from "../../models/Estore_db/OrderModel";
import ErrorManager from "../../classes/ErrorManager";
import { authorize } from "../../security/SecurityManager";

const customControllers = {
  /**
   * Init routes
   */
  init: router => {
    const baseUrl = `${Properties.api}/cart`;

    /**
     * Override here your custom routes
     * EXAMPLE:
     *    router.get(baseUrl + "/:id", customControllers.get);
     */

    OrderControllerGenerated.init(router);
  },

  /**
   * Override here your custom controllers
   * EXAMPLE:
   *
   
    get: async (req, res) => {
      try {
        console.log("This is my custom controller");
        const result = await OrderModel.getPopulate(req.params.id);
        res.json(result);
      } catch (err) {
        const safeErr = ErrorManager.getSafeError(err);
        res.status(safeErr.status).json(safeErr);
      }
    }

   */

  get: async (req, res) => {
    try {
      const result = await OrderModel.getPopulate(req.params.id);
      res.json(result);
    } catch (err) {
      const safeErr = ErrorManager.getSafeError(err);
      res.status(safeErr.status).json(safeErr);
    }
  }
};

export default {
  ...OrderControllerGenerated,
  ...customControllers
};
